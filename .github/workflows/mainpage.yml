name: Anasayfa G√ºncelleme

on:
  push:
    paths:
      - 'birbakista.json'
      - 'birlikdukkani.json'
      - 'duyulanlar.json'
      - 'hazirolanlahasbihal.json'
      - 'kelamikibar.json'
      - 'kendinolmayageldin.json'
      - 'kussesleri.json'
      - 'pelevin.json'
      - 'sabahnesesi.json'
      - 'simurg.json'
      - 'soylesikayitlari.json'
      - 'tazecik.json'
      - 'umutrehberi.json'
      - 'varliginsevinci.json'
    branches:
      - main

jobs:
  update-homepage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Update Homepage JSON
      run: |
        node << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        // ƒ∞≈ülenecek dosyalar
        const files = [
          { path: 'birbakista.json', name: 'Bir Bakƒ±≈üta' },
          { path: 'birlikdukkani.json', name: 'Birlik D√ºkkanƒ±' },
          { path: 'duyulanlar.json', name: 'Duyulanlar' },
          { path: 'hazirolanlahasbihal.json', name: 'Hazƒ±r Olanla Hasbihal' },
          { path: 'kelamikibar.json', name: 'Kel√¢m-ƒ± Kibar' },
          { path: 'kendinolmayageldin.json', name: 'Bulan Ol Kendi Oldu' },
          { path: 'kussesleri.json', name: 'Ku≈ü Sesleri' },
          { path: 'pelevin.json', name: 'Yolda √áevrilenler' },
          { path: 'sabahnesesi.json', name: 'Sabah Ne≈ü'esi' },
          { path: 'simurg.json', name: 'Simurg' },
          { path: 'soylesikayitlari.json', name: 'S√∂yle≈üi Kayƒ±tlarƒ±' },
          { path: 'tazecik.json', name: 'Tazecik' },
          { path: 'umutrehberi.json', name: 'Bana √ñyle Gelmi≈ü' },
          { path: 'varliginsevinci.json', name: 'Varlƒ±ƒüƒ±n Sevinci' }
        ];
        
        // T√ºm √∂ƒüeleri topla (saat hesaplamasƒ± YOK)
        const allItems = [];
        const counts = {};
        
        files.forEach(({ path: filePath, name }) => {
          const key = path.basename(filePath, '.json');
          
          try {
            if (!fs.existsSync(filePath)) {
              counts[key] = 0;
              return;
            }
            
            const { isaretler = [] } = JSON.parse(fs.readFileSync(filePath, 'utf8'));
            counts[key] = isaretler.length;
            
            // Sadece 20 ile ba≈ülayan ID'leri i≈üle - saat hesaplamasƒ± yok!
            isaretler.forEach(({ id, text = '' }) => {
              if (id && id.toString().startsWith('20')) {
                // Text alanƒ±nƒ± kontrol et ve formatla
                let formattedText = '...';
                if (text && text.trim()) {
                  formattedText = text.length > 50 ? text.slice(0, 50) + '...' : text;
                }
                
                allItems.push({
                  id,
                  yol: key,
                  baslik: name,
                  text: formattedText
                });
              }
            });
            
            console.log(`‚úì ${name}: ${isaretler.length} √∂ƒüe`);
          } catch (err) {
            console.error(`‚úó ${name}: ${err.message}`);
            counts[key] = 0;
          }
        });
        
        // En y√ºksek 3 ID'yi bul
        const topThreeIds = allItems
          .sort((a, b) => b.id - a.id)
          .slice(0, 3);
        
        // Rastgele 3 √∂ƒüe se√ß
        const getRandomItems = (items, count) => {
          const shuffled = [...items].sort(() => 0.5 - Math.random());
          return shuffled.slice(0, count);
        };
        
        const randomThreeItems = getRandomItems(allItems, 3);
        
        // ID'den ge√ßen saati hesapla (taze ve rastgele i√ßin!)
        const getHoursFromId = (id) => {
          const s = id.toString();
          if (s.length < 12) return '0h';
          
          try {
            const date = new Date(
              +s.slice(0, 4),      // yƒ±l
              +s.slice(4, 6) - 1,  // ay (0-11)
              +s.slice(6, 8),      // g√ºn
              +s.slice(8, 10),     // saat
              +s.slice(10, 12)     // dakika
            );
            
            const hours = Math.floor((Date.now() - date) / 3600000);
            return hours >= 0 ? `${hours}h` : '0h';
          } catch {
            return '0h';
          }
        };
        
        // Son 3 √∂ƒüeye saat hesaplamasƒ± ekle
        const topThree = topThreeIds.map(item => ({
          ...item,
          gecensaat: getHoursFromId(item.id)
        }));
        
        // Rastgele 3 √∂ƒüeye saat hesaplamasƒ± ekle
        const randomThree = randomThreeItems.map(item => ({
          ...item,
          gecensaat: getHoursFromId(item.id)
        }));
        
        console.log(`\nEn y√ºksek 3 ID:`);
        topThree.forEach(({ id, gecensaat, yol, baslik }) => 
          console.log(`${id} (${gecensaat}) - ${baslik}`)
        );
        
        console.log(`\nRastgele 3 √∂ƒüe:`);
        randomThree.forEach(({ id, gecensaat, yol, baslik }) => 
          console.log(`${id} (${gecensaat}) - ${baslik}`)
        );
        
        // JSON olu≈ütur ve kaydet
        const homepage = {
          son_guncelleme: new Date().toISOString(),
          isaretler: { 
            taze: topThree,
            rastgele: randomThree
          },
          adetler: counts
        };
        
        fs.writeFileSync('anasayfa.json', JSON.stringify(homepage, null, 2));
        console.log(`\n‚úÖ anasayfa.json g√ºncellendi`);
        EOF
    
    - name: Validate JSON
      run: |
        if ! jq empty anasayfa.json 2>/dev/null; then
          echo "‚ùå JSON formatƒ± ge√ßersiz!"
          exit 1
        fi
        echo "‚úÖ JSON ge√ßerli"
    
    - name: Commit Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git add anasayfa.json
        
        if git diff --staged --quiet; then
          echo "‚ÑπÔ∏è Deƒüi≈üiklik yok"
        else
          git commit -m "üîÑ Anasayfa g√ºncellendi - $(date '+%Y-%m-%d %H:%M')"
          git push
          echo "‚úÖ Deƒüi≈üiklikler kaydedildi"
        fi
