name: Anasayfa GÃ¼ncelleme

on:
  push:
    paths:
      - 'birbakista.json'
      - 'soylesikayitlari.json'
    branches:
      - main

jobs:
  update-homepage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Update Homepage JSON
      run: |
        node << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        // Mevcut anasayfa.json dosyasÄ±nÄ± oku veya yeni bir tane oluÅŸtur
        let homepage = {
          son_guncelleme: new Date().toISOString(),
          isaretler: {
            taze: []
          }
        };
        
        if (fs.existsSync('anasayfa.json')) {
          try {
            homepage = JSON.parse(fs.readFileSync('anasayfa.json', 'utf8'));
          } catch (error) {
            console.log('Mevcut anasayfa.json okunamadÄ±, yeni bir tane oluÅŸturuluyor...');
          }
        }
        
        // Ä°ÅŸlenecek dosyalar
        const filesToProcess = [
          { path: 'birbakista.json', name: 'birbakista.json' },
          { path: 'soylesikayitlari.json', name: 'soylesikayitlari.json' }
        ];
        
        // Her dosyayÄ± iÅŸle
        filesToProcess.forEach(file => {
          if (fs.existsSync(file.path)) {
            try {
              const data = JSON.parse(fs.readFileSync(file.path, 'utf8'));
              
              if (data.isaretler && Array.isArray(data.isaretler)) {
                // ID'leri bÃ¼yÃ¼kten kÃ¼Ã§Ã¼ÄŸe sÄ±rala ve ilk 3'Ã¼nÃ¼ al
                const sortedIds = data.isaretler
                  .map(item => item.id)
                  .filter(id => id !== undefined && id !== null)
                  .sort((a, b) => b - a)
                  .slice(0, 3);
                
                // Anasayfa verisinde bu dosya iÃ§in olan kaydÄ± bul veya oluÅŸtur
                const existingIndex = homepage.isaretler.taze.findIndex(item => item.yol === file.name);
                
                const updateData = {
                  yol: file.name,
                  tazeler: sortedIds,
                  son_guncelleme: new Date().toISOString()
                };
                
                if (existingIndex !== -1) {
                  homepage.isaretler.taze[existingIndex] = updateData;
                } else {
                  homepage.isaretler.taze.push(updateData);
                }
                
                console.log(`${file.name} iÅŸlendi: ${sortedIds.length} ID bulundu`);
              }
            } catch (error) {
              console.error(`${file.name} iÅŸlenirken hata oluÅŸtu:`, error.message);
            }
          }
        });
        
        // Genel son gÃ¼ncelleme zamanÄ±nÄ± ayarla
        homepage.son_guncelleme = new Date().toISOString();
        
        // anasayfa.json dosyasÄ±nÄ± gÃ¼ncelle
        fs.writeFileSync('anasayfa.json', JSON.stringify(homepage, null, 2));
        console.log('anasayfa.json gÃ¼ncellendi');
        EOF
    
    - name: Commit and Push Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add anasayfa.json
        
        # DeÄŸiÅŸiklik var mÄ± kontrol et
        if git diff --staged --quiet; then
          echo "Herhangi bir deÄŸiÅŸiklik yok"
        else
          git commit -m "ðŸ”„ Anasayfa otomatik gÃ¼ncellendi"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
        fi
